# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class KCWIAcquisition(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, version: str=None, script: str=None, guider_po: str=None, guider_gs_ra: float=None, guider_gs_dec: float=None, guider_gs_mode: str=None):  # noqa: E501
        """KCWIAcquisition - a model defined in Swagger

        :param name: The name of this KCWIAcquisition.  # noqa: E501
        :type name: str
        :param version: The version of this KCWIAcquisition.  # noqa: E501
        :type version: str
        :param script: The script of this KCWIAcquisition.  # noqa: E501
        :type script: str
        :param guider_po: The guider_po of this KCWIAcquisition.  # noqa: E501
        :type guider_po: str
        :param guider_gs_ra: The guider_gs_ra of this KCWIAcquisition.  # noqa: E501
        :type guider_gs_ra: float
        :param guider_gs_dec: The guider_gs_dec of this KCWIAcquisition.  # noqa: E501
        :type guider_gs_dec: float
        :param guider_gs_mode: The guider_gs_mode of this KCWIAcquisition.  # noqa: E501
        :type guider_gs_mode: str
        """
        self.swagger_types = {
            'name': str,
            'version': str,
            'script': str,
            'guider_po': str,
            'guider_gs_ra': float,
            'guider_gs_dec': float,
            'guider_gs_mode': str
        }

        self.attribute_map = {
            'name': 'name',
            'version': 'version',
            'script': 'script',
            'guider_po': 'guider_po',
            'guider_gs_ra': 'guider_gs_ra',
            'guider_gs_dec': 'guider_gs_dec',
            'guider_gs_mode': 'guider_gs_mode'
        }
        self._name = name
        self._version = version
        self._script = script
        self._guider_po = guider_po
        self._guider_gs_ra = guider_gs_ra
        self._guider_gs_dec = guider_gs_dec
        self._guider_gs_mode = guider_gs_mode

    @classmethod
    def from_dict(cls, dikt) -> 'KCWIAcquisition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The KCWIAcquisition of this KCWIAcquisition.  # noqa: E501
        :rtype: KCWIAcquisition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this KCWIAcquisition.


        :return: The name of this KCWIAcquisition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this KCWIAcquisition.


        :param name: The name of this KCWIAcquisition.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def version(self) -> str:
        """Gets the version of this KCWIAcquisition.


        :return: The version of this KCWIAcquisition.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this KCWIAcquisition.


        :param version: The version of this KCWIAcquisition.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")  # noqa: E501

        self._version = version

    @property
    def script(self) -> str:
        """Gets the script of this KCWIAcquisition.


        :return: The script of this KCWIAcquisition.
        :rtype: str
        """
        return self._script

    @script.setter
    def script(self, script: str):
        """Sets the script of this KCWIAcquisition.


        :param script: The script of this KCWIAcquisition.
        :type script: str
        """
        if script is None:
            raise ValueError("Invalid value for `script`, must not be `None`")  # noqa: E501

        self._script = script

    @property
    def guider_po(self) -> str:
        """Gets the guider_po of this KCWIAcquisition.


        :return: The guider_po of this KCWIAcquisition.
        :rtype: str
        """
        return self._guider_po

    @guider_po.setter
    def guider_po(self, guider_po: str):
        """Sets the guider_po of this KCWIAcquisition.


        :param guider_po: The guider_po of this KCWIAcquisition.
        :type guider_po: str
        """
        if guider_po is None:
            raise ValueError("Invalid value for `guider_po`, must not be `None`")  # noqa: E501

        self._guider_po = guider_po

    @property
    def guider_gs_ra(self) -> float:
        """Gets the guider_gs_ra of this KCWIAcquisition.


        :return: The guider_gs_ra of this KCWIAcquisition.
        :rtype: float
        """
        return self._guider_gs_ra

    @guider_gs_ra.setter
    def guider_gs_ra(self, guider_gs_ra: float):
        """Sets the guider_gs_ra of this KCWIAcquisition.


        :param guider_gs_ra: The guider_gs_ra of this KCWIAcquisition.
        :type guider_gs_ra: float
        """
        if guider_gs_ra is None:
            raise ValueError("Invalid value for `guider_gs_ra`, must not be `None`")  # noqa: E501

        self._guider_gs_ra = guider_gs_ra

    @property
    def guider_gs_dec(self) -> float:
        """Gets the guider_gs_dec of this KCWIAcquisition.


        :return: The guider_gs_dec of this KCWIAcquisition.
        :rtype: float
        """
        return self._guider_gs_dec

    @guider_gs_dec.setter
    def guider_gs_dec(self, guider_gs_dec: float):
        """Sets the guider_gs_dec of this KCWIAcquisition.


        :param guider_gs_dec: The guider_gs_dec of this KCWIAcquisition.
        :type guider_gs_dec: float
        """
        if guider_gs_dec is None:
            raise ValueError("Invalid value for `guider_gs_dec`, must not be `None`")  # noqa: E501

        self._guider_gs_dec = guider_gs_dec

    @property
    def guider_gs_mode(self) -> str:
        """Gets the guider_gs_mode of this KCWIAcquisition.


        :return: The guider_gs_mode of this KCWIAcquisition.
        :rtype: str
        """
        return self._guider_gs_mode

    @guider_gs_mode.setter
    def guider_gs_mode(self, guider_gs_mode: str):
        """Sets the guider_gs_mode of this KCWIAcquisition.


        :param guider_gs_mode: The guider_gs_mode of this KCWIAcquisition.
        :type guider_gs_mode: str
        """
        if guider_gs_mode is None:
            raise ValueError("Invalid value for `guider_gs_mode`, must not be `None`")  # noqa: E501

        self._guider_gs_mode = guider_gs_mode
